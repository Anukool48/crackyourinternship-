/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        int c1=0;
        int c2=0;
         ListNode *ptr1=headA;
        ListNode *ptr2=headB;
        while(headA!=NULL){
            headA=headA->next;
            c1++;
        }
        
        while(headB!=NULL){
            headB=headB->next;
            c2++;
        }
       int maxp=max(c1,c2);
       
        for(int i=0; i<abs(c1-c2); i++){
            if(maxp==c1){
                ptr1=ptr1->next;
            }
            
            else if(maxp==c2){
                ptr2=ptr2->next;
            }
        }
        
        while(ptr1!=NULL && ptr2!=NULL){
            if(ptr1==ptr2)
                return ptr1;
            ptr1=ptr1->next;
            ptr2=ptr2->next;
        }
        return NULL;
    }
};
